---
- name: ocp4-deploy | Task03-deploy | Download openshift images for registry
  block:
    - name: ocp4-deploy | Task03-deploy | Check for file existence
      find:
        file_type: directory
        paths: "{{ lookup('ENV', 'HOME') }}/{{ clusterDomain }}"
      register: files

    - name: ocp4-deploy | Task03-deploy | Remove any existing directories (if they exist)
      file:
        path: "{{ lookup('ENV', 'HOME') }}/{{ clusterDomain }}"
        state: absent
      when: files.examined > 0 

    - name: ocp4-deploy | Task03-deploy | Create Task03-deploy mirror directories
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ lookup('ENV', 'HOME') }}/{{ clusterDomain }}/mirror"
        - "{{ lookup('ENV', 'HOME') }}/.docker"

    - name: ocp4-deploy | Task03-deploy | Sync content from quay.io
      shell: |
        oc adm release mirror \
        --from=quay.io/openshift-release-dev/ocp-release:{{ ocp_version }}-x86_64 \
        --to-dir={{ lookup('ENV', 'HOME') }}/{{ clusterDomain }}/mirror

# Rescue block if there are any failures in the above block
  rescue:
    - name: ocp4-deploy | Task03-deploy | Remove any existing directories (if they exist)
      file:
        path: "{{ lookup('ENV', 'HOME') }}/{{ clusterDomain }}"
        state: absent

    - name: ocp4-deploy | Task03-deploy | Create registry mirror directory
      file:
        path: "{{ lookup('ENV', 'HOME') }}/{{ clusterDomain }}/mirror"

    - name: ocp4-deploy | Task03-deploy | Sync content from quay.io
      shell: |
        oc adm release mirror \
        --from=quay.io/openshift-release-dev/ocp-release:{{ ocp_version }}-x86_64 \
        --to-dir={{ lookup('ENV', 'HOME') }}/{{ clusterDomain }}/mirror

- name: "ocp4-deploy | Task03-deploy | Check for content in {{ remote_home }}/{{ cluster_home  }}/mirror"
  find:
    paths: "{{ lookup('ENV', 'HOME') }}/{{ cluster_home  }}/mirror"
  register: contents

- name: ocp4-deploy | Task03-deploy | Tar up the mirrored content
  command:
    "tar cvf {{ lookup('ENV', 'HOME') }}/mirror.tar -C \
     {{ lookup('ENV', 'HOME') }}/{{ lookup('ENV', 'clusterDomain') }} mirror"
  args:
    creates: {{ lookup('ENV', 'HOME') }}/mirror.tar
  when: contents.examined > 0

#- name: ocp4-deploy | Task03-deploy | Offload archive to ansible control node
#  fetch:
#    src: "{{ lookup('ENV', 'HOME') }}-mirror.tar"
#    dest: "{{ inventory_hostname }}-mirror.tar"
