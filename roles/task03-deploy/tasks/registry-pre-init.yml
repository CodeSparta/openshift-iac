---
- name: OCP4-registry | registry-pre-init | Download
  block:
    - name: OCP4-registry | registry-pre-init | Check for file existence
      find:
        file_type: directory
        paths: "{{ remote_home }}/{{ cluster_domain }}"
      register: files

    - name: OCP4-registry | registry-pre-init | Remove any existing directories (if they exist)
      file:
        path: "{{ remote_home }}/{{ cluster_domain }}"
        state: absent
      when: files.examined > 0 

    - name: OCP4-registry | registry-pre-init | Create registry-pre-init mirror directories
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ remote_home }}/{{ cluster_domain }}/mirror"
        - "{{ remote_home }}/.docker"

    - name: OCP4-registry | registry-pre-init | Sync content from quay.io
      shell: |
        oc adm release mirror \
        --from=quay.io/openshift-release-dev/ocp-release:{{ ocp_version }}-x86_64 \
        --to-dir={{ remote_home }}/{{ cluster_domain }}/mirror

# Rescue block if there are any failures in the above block
  rescue:
    - name: OCP4-registry | registry-pre-init | Remove any existing directories (if they exist)
      file:
        path: "{{ remote_home }}/{{ cluster_domain }}"
        state: absent

    - name: OCP4-registry | registry-pre-init | Create registry mirror directory
      file:
        path: "{{ remote_home }}/{{ cluster_domain }}/mirror"

    - name: OCP4-registry | registry-pre-init | Sync content from quay.io
      shell: |
        oc adm release mirror \
        --from=quay.io/openshift-release-dev/ocp-release:{{ ocp_version }}-x86_64 \
        --to-dir={{ remote_home }}/{{ cluster_domain }}/mirror

- name: "OCP4-registry | registry-pre-init | Check for content in {{ remote_home }}/{{ cluster_home  }}/mirror"
  find:
    paths: "{{ remote_home }}/{{ cluster_home  }}/mirror"
  register: contents

- name: OCP4-registry | registry-pre-init | Archive the content from quay.io
  archive:
    path: "{{ remote_home }}/{{ cluster_domain }}/mirror"
    dest: "{{ remote_home }}mirror.tar"
    format: tar
  when: contents.examined > 0

- name: OCP4-registry | registry-pre-init | Offload archive to ansible control node
  fetch:
    src: "{{ remote_home }}mirror.tar"
    dest: "{{ inventory_hostname }}-mirror.tar"
