---
- name: ocp4-deploy | task02-config | Create manifest
  shell: "openshift-install create manifests --dir={{ artifact_directory }}/data"

- name: ocp4-deploy | task02-config | Get cluster random name
  shell: "awk -F'[-]' '/infrastructureName/{print $2}' {{ artifact_directory }}/data/manifests/cluster-infrastructure-02-config.yml"
  register: idrand

- name: ocp4-deploy | task02-config | Replace random name with vpc name
  replace:
    path: "{{ artifact_directory }}/data/manifests/cluster-infrastructure-02-config.yml"
    regexp: "infrastructureName: {{ cluster_name }}-{{ idrand.stdout }}"
    replace: "infrastructureName: {{ vpc_name }}"

- name: ocp4-deploy | task02-config | Find all manifest files
  find:
    path: "{{ artifact_directory }}/data"
    recurse: yes
    age: 1s
  register: manifests

- name: ocp4-deploy | task02-config | Replace infrastructureName for all files
  replace:
    path: "{{ item.path }}"
    regexp: "{{ cluster_name }}-{{ idrand.stdout }}"
    replace: "{{ vpc_name }}"
  loop: "{{ manifests.files }}"

- name: ocp4-deploy | task02-config | Replace region for all files
  replace:
    path: "{{ item.path }}"
    regexp: "us-east-1"
    replace: "{{ ec2_region }}"
  loop: "{{ manifests.files }}"

- block:
    - name: ocp4-deploy | task02-config | Replace region for cluster-infrastructure-02-config.yml
      replace:
        path: "{{ artifact_directory }}/data/manifests/cluster-infrastructure-02-config.yml"
        regexp: "us-east-1"
        replace: "{{ ec2_region }}"
  always:
    - name: ocp4-deploy | task02-config | Check to see if the content still exists
      lineinfile:
        path: "{{ artifact_directory }}/data/manifests/cluster-infrastructure-02-config.yml"
        line: us-east-1
        state: present
      check_mode: true
      register: presence

    - name: ocp4-deploy | task02-config | Replace region for cluster-infrastructure-02-config.yml
      replace:
        path: "{{ artifact_directory }}/data/manifests/cluster-infrastructure-02-config.yml"
        regexp: "us-east-1"
        replace: "{{ ec2_region }}"
      when: "{{ presence.changed }} == False"

- name: ocp4-deploy | task02-config | Remove default ingress config & non-applicable cloud cred configs
  file:
    path: '{{ item }}'
    state: absent
  loop:
    - "{{ artifact_directory }}/data/openshift/99_cloud-creds-secret.yaml"
    - "{{ artifact_directory }}/data/openshift/99_role-cloud-creds-secret-reader.yaml"
    
- name: ocp4-deploy | task02-config | Copy Machine API Operator credentials
  copy:
    src: "{{ artifact_directory }}/bak/openshift/"
    dest: "{{ artifact_directory }}/data/openshift/"

- name: ocp4-deploy | task02-config | Backup ignition config directory
  copy:
    src: "{{ artifact_directory }}/data/"
    dest: "{{ artifact_directory }}/bak/data-ignition/"

- name: ocp4-deploy | task02-config | Generate ignition config files
  shell: "openshift-install create ignition-configs --dir={{ artifact_directory }}/data"

- name: ocp4-deploy | task02-config | Move auth directory out of future nginx web root path
  shell: "mv {{ artifact_directory }}/data/auth {{ artifact_directory }}/bak/auth"

- name: ocp4-deploy | task02-config | Copy kubeconfig
  copy:
    src: "{{ artifact_directory }}/bak/auth/kubeconfig"
    dest: ~/.kube/config

- name: ocp4-deploy | task02-config | Register AWS access key ID
  shell: "cat ${dirArtifacts}/.aws/govcloud.credentials | grep aws_access_key_id | awk '{print $3}'"
  register: aws_access_key

- name: ocp4-deploy | task02-config | Register AWS secret access key
  shell: "cat ${dirArtifacts}/.aws/govcloud.credentials | grep aws_secret_access_key | awk '{print $3}'"
  register: aws_secret_key

- set_fact:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key.stdout }}"
    TF_VAR_aws_access_key_id: "{{ aws_access_key.stdout }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key.stdout }}"
    TF_VAR_aws_secret_access_key: "{{ aws_secret_key.stdout }}"
  no_log: true

- name: ocp4-deploy | task02-config | Initilize terraform modules
  shell: "cd {{ item }} && terraform init"
  with_items:
    - "{{ base_directory }}/terraform/aws-platform-base/"
    - "{{ base_directory }}/terraform/aws-platform-openshift4-registry/"
    - "{{ base_directory }}/terraform/aws-platform-openshift4-bootstrap/"
    - "{{ base_directory }}/terraform/aws-platform-openshift4-masters/"
