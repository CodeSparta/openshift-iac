---
- name: Clone Git repositories
  git:
    clone: yes
    dest: "{{ item.dest }}"
    repo: "{{ item.repo }}"
  with_items:
    - "{{ gitrepos }}"

- name: Source environmental variables
  shell: "source /root/PlatformOne/*/environment"

- name: Create manifest
  shell: "openshift-install create manifests --dir={{ dirartifacts }}/data"

- name: Get cluster random name
  shell: "awk -F'[-]' '/infrastructureName/{print $2}' {{ dirartifacts }}/data/manifests/cluster-infrastructure-02-config.yml"
  register: idrand

- name: Replace random name with vpc name
  replace:
    path: "{{ dirartifacts }}/data/manifests/cluster-infrastructure-02-config.yml"
    regexp: "infrastructureName: {{ namecluster}}-{{ idrand.stdout }}"
    replace: "infrastructureName: {{ namevpc }}"

- name: Find all manifest files
  find:
    path: "{{ dirartifacts }}/data"
    recurse: yes
    age: 1s
  register: manifests

- name: Replace infrastructureName for all files
  replace:
    path: "{{ item.path }}"
    regexp: "{{ namecluster }}-{{ idrand.stdout }}"
    replace: "{{ namevpc }}"
  loop: "{{ manifests.files }}"

- name: Replace region for all files
  replace:
    path: "{{ item.path }}"
    regexp: "us-east-1"
    replace: "{{ awsregion1 }}"
  loop: "{{ manifests.files }}"

- block:
    - name: Replace region for cluster-infrastructure-02-config.yml
      replace:
        path: "{{ dirartifacts }}/data/manifests/cluster-infrastructure-02-config.yml"
        regexp: "us-east-1"
        replace: "{{ awsregion1 }}"
  always:
    - name: Check to see if the content still exists
      lineinfile:
        path: "{{ dirartifacts }}/data/manifests/cluster-infrastructure-02-config.yml"
        line: us-east-1
        state: present
      check_mode: true
      register: presence

    - name: Replace region for cluster-infrastructure-02-config.yml
      replace:
        path: "{{ dirartifacts }}/data/manifests/cluster-infrastructure-02-config.yml"
        regexp: "us-east-1"
        replace: "{{ awsregion1 }}"
      when: "{{ presence.changed }} == False"

- name: Remove default ingress config & non-applicable cloud cred configs
  file:
    path: '{{ item }}'
    state: absent
  loop:
    - "{{ dirartifacts }}/data/openshift/99_cloud-creds-secret.yaml"
    - "{{ dirartifacts }}/data/openshift/99_role-cloud-creds-secret-reader.yaml"
    
- name: Copy Machine API Operator credentials
  copy:
    src: "{{ dirartifacts }}/bak/openshift/"
    dest: "{{ dirartifacts }}/data/openshift/"

- name: Backup ignition config directory
  copy:
    src: "{{ dirartifacts }}/data/"
    dest: "{{ dirartifacts }}/bak/data-ignition/"

- name: Generate ignition config files
  shell: "openshift-install create ignition-configs --dir={{ dirartifacts }}/data"

- name: Move auth directory out of future nginx web root path
  shell: "mv {{ dirartifacts }}/data/auth {{ dirartifacts }}/bak/auth"

- name: Copy kubeconfig
  copy:
    src: "{{ dirartifacts }}/bak/auth/kubeconfig"
    dest: ~/.kube/config

- name: Source Terraform variables
  shell: "{{ base_directory }}/terraform/aws-platform-base/tfsetup.sh"

- name: Initilize terraform modules
  shell: "cd {{ item }} && terraform init"
  with_items:
    - "{{ base_directory }}/terraform/aws-platform-base/"
    - "{{ base_directory }}/terraform/aws-platform-openshift4-registry/"
    - "{{ base_directory }}/terraform/aws-platform-openshift4-bootstrap/"
    - "{{ base_directory }}/terraform/aws-platform-openshift4-masters/"